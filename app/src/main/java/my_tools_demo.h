/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class my_tools_demo */

#ifndef _Included_my_tools_demo
#define _Included_my_tools_demo
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     my_tools_demo
 * Method:    stringFromJNI
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_my_tools_demo_stringFromJNI
  (JNIEnv *, jclass);

/*
 * Class:     my_tools_demo
 * Method:    add
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_my_tools_demo_add
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     my_tools_demo
 * Method:    getStringFromJava
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_my_tools_demo_getStringFromJava
  (JNIEnv *, jobject);

/*
 * Class:     my_tools_demo
 * Method:    getStringFromJavaStatic
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_my_tools_demo_getStringFromJavaStatic
  (JNIEnv *, jobject);

/*
 * Class:     my_tools_demo
 * Method:    callNormalMethod
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_my_tools_demo_callNormalMethod
  (JNIEnv *, jobject);

/*
 * Class:     my_tools_demo
 * Method:    callNormalMethod2
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_my_tools_demo_callNormalMethod2
  (JNIEnv *, jobject);

/*
 * Class:     my_tools_demo
 * Method:    callStaticMethod
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_my_tools_demo_callStaticMethod
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
